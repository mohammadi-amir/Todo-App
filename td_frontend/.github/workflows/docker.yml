name: ci
############################################################################################################
# Dieser löst den Workflow aus, wenn Änderungen direkt in den Haupt-Branch (main) gepusht werden.
############################################################################################################
on:
  push: 
    branches:
      - 'main'
############################################################################################################
# Ein Job wird innerhalb eines jobs-Blocks definiert und hat eine eindeutige ID als Schlüssel. 
# Jeder Job enthält eine Spezifikation der Umgebung, der auszuführenden Schritte und optional 
# Abhängigkeiten zu anderen Jobs.
############################################################################################################
jobs: 
  docker: #job
    name: build and release docker image #eindeutige ID 
    runs-on: ubuntu-latest # Umgebung
    steps: # Schritte
      -
        name: Checkout
        uses: actions/checkout@v3
      -
#####################################################################################################################
# Dieser Schritt führt eine Anmeldung bei Docker Hub durch, um Docker-Images zu erstellen, zu pushen oder zu ziehen.
# Es wird die offizielle GitHub Action "docker/login-action" verwendet.
# Die Zugangsdaten (Benutzername und Token) werden sicher über GitHub Secrets verwaltet.
######################################################################################################################
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: amirmohammadi60
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
###########################################################################################################################
# Dieser Schritt baut ein Docker-Image und pusht es anschließend in das angegebene Docker-Repository.
# Es wird die GitHub Action "docker/build-push-action" in Version 3 verwendet.
###########################################################################################################################
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: amirmohammadi60/ttd_frontend:${{ github.run_number }}  # tags: <deine-docker-repository>/<deine-image>:vesion oder tag
          
#############################################################################################################################          
# Dieser Job führt das Deployment eines neuen Docker-Images auf einem entfernten Server durch.
# Die Aktion verwendet SSH, um Remote-Befehle auf dem Zielserver auszuführen.
###################################################################################################################
  deploy: #job
    name: deploy new image #eindeutige ID
    needs: [docker] # Dieser Job wird erst ausgeführt, nachdem der Job "docker" erfolgreich abgeschlossen ist.
    runs-on: ubuntu-latest # Umgebung 
    steps: # Schritte
    - name: executing remote SSH commands using password
      uses: appleboy/ssh-action@master
      with:
        host: <deine-host-IP>
        username: deploy
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |   # Nach jedem Deployment müssen zuerst die alten Container gestoppt und gelöscht werden, bevor neue Container erstellt werden.
            docker stop ttd_frontend || true 
            docker rm -f ttd_frontend || true
            docker run -d --name td_frontend -p8080:80 amirmohammadi60/td_frontend:ver-1.${{ github.run_number }}
